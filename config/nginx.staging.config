server {
    listen 80;
    server_name status.dalgo.org;

    return 301 https://$host$request_uri;
}

server {
	listen 443;
	server_name flower-staging.dalgo.org;
        ssl_certificate     /etc/nginx/ssl/dalgo.org.pem;        # Cloudflare origin cert
        ssl_certificate_key /etc/nginx/ssl/dalgo.org.key;

	location / {
		proxy_pass http://localhost:5555;
		include proxy_params;
		proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_set_header X-Original-URL $scheme://$host$request_uri;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade_keepalive;

                auth_request     /outpost.goauthentik.io/auth/nginx;
                error_page       401 = @authentik;
                auth_request_set $auth_cookie $upstream_http_set_cookie;
                auth_request_set $auth_status $upstream_status;
                add_header       Set-Cookie $auth_cookie;


                auth_request_set $authentik_username $upstream_http_x_authentik_username;
                auth_request_set $authentik_groups $upstream_http_x_authentik_groups;
                auth_request_set $authentik_entitlements $upstream_http_x_authentik_entitlements;
                auth_request_set $authentik_email $upstream_http_x_authentik_email;
                auth_request_set $authentik_name $upstream_http_x_authentik_name;
                auth_request_set $authentik_uid $upstream_http_x_authentik_uid;


                proxy_set_header X-authentik-username $authentik_username;
                proxy_set_header X-authentik-groups $authentik_groups;
                proxy_set_header X-authentik-entitlements $authentik_entitlements;
                proxy_set_header X-authentik-email $authentik_email;
                proxy_set_header X-authentik-name $authentik_name;
                proxy_set_header X-authentik-uid $authentik_uid;


        }
	location /outpost.goauthentik.io {
                proxy_pass              http://localhost:9000/outpost.goauthentik.io;
                proxy_set_header        Host               $host;
                proxy_set_header        X-Original-URL     $scheme://$http_host$request_uri;
                add_header              Set-Cookie         $auth_cookie;
                auth_request_set        $auth_cookie       $upstream_http_set_cookie;
                proxy_pass_request_body off;
                proxy_set_header        Content-Length "";

                proxy_set_header        X-Real-IP          $remote_addr;
                proxy_set_header        X-Forwarded-For    $proxy_add_x_forwarded_for;
                proxy_set_header        X-Forwarded-Proto  $scheme;
        }
	location @authentik {
                internal;
                add_header Set-Cookie $auth_cookie;
                return 302 /outpost.goauthentik.io/start?rd=$scheme://$http_host$request_uri;
        }
}



server {
	listen 443 ssl;
        server_name staging-app.dalgo.org;

	ssl_certificate     /etc/nginx/ssl/dalgo.org.pem;        # Cloudflare origin cert
  	ssl_certificate_key /etc/nginx/ssl/dalgo.org.key;

	 location / {
                proxy_pass http://localhost:3001;
                include proxy_params;
        	proxy_set_header Host $host;
       		proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header X-Forwarded-Proto $scheme;

	}
}


server {
	server_name staging.dalgo.org;

	location / {
		proxy_pass http://localhost:3000;
		include proxy_params;
	}

	if (-f /usr/share/nginx/html/maintenance.html) {
		return 503;
	}

	error_page 503 @maintenance;
	location @maintenance {
		root /usr/share/nginx/html;
		rewrite ^(.*)$ /maintenance.html break;
	}


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/staging.dalgo.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/staging.dalgo.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
	server_name staging-api.dalgo.org;

	location /wss/ {
		proxy_pass http://localhost:8002;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		include proxy_params;
	}

	location / {
		proxy_pass http://localhost:8002;
		include proxy_params;
	}


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/staging-api.dalgo.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/staging-api.dalgo.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}




server {
    if ($host = staging-api.dalgo.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	server_name staging-api.dalgo.org;
    listen 80;
    return 404; # managed by Certbot


}


server {
    if ($host = staging.dalgo.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	server_name staging.dalgo.org;
    listen 80;
    return 404; # managed by Certbot


}
